{"ast":null,"code":"import _objectSpread from\"/workspaces/Dim_checktofrom/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Stage,Layer,Line,Text,Rect,Circle,RegularPolygon}from'react-konva';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('design');const[lines,setLines]=useState([]);const[points,setPoints]=useState([]);const[obj1,setObj1]=useState('Ninguno');const[obj2,setObj2]=useState('Ninguno');const[dimension,setDimension]=useState('');const[inputPos,setInputPos]=useState({x:0,y:0});const[showInput,setShowInput]=useState(false);const[tempLine,setTempLine]=useState(null);const[mousePos,setMousePos]=useState(null);const[hoveredObj,setHoveredObj]=useState(null);const[selectedEnd,setSelectedEnd]=useState(null);const[nameInput,setNameInput]=useState('');const[eraserMode,setEraserMode]=useState(false);const[nameInput1,setNameInput1]=useState('');const[nameInput2,setNameInput2]=useState('');const[distanciaRuta,setDistanciaRuta]=useState(null);const[rutaCalculada,setRutaCalculada]=useState([]);const[pencilMode,setPencilMode]=useState(true);const proximityThreshold=25;const getClosestEndpoint=pos=>{let closest=null;let minDist=Infinity;lines.forEach(line=>{['p1','p2'].forEach(end=>{const point=line[end];const dist=Math.hypot(pos.x-point.x,pos.y-point.y);if(dist<proximityThreshold&&dist<minDist){closest={point,obj:line[end==='p1'?'obj1':'obj2']};minDist=dist;}});});return closest;};const handleStageClick=e=>{const stage=e.target.getStage();const pos=stage.getPointerPosition();if(pencilMode){if(eraserMode)return;if(points.length===0){const snap=getClosestEndpoint(pos);if(snap){setPoints([snap.point]);setObj1(snap.obj);}else{setPoints([pos]);}}else{const newLine={p1:points[0],p2:pos,obj1,obj2,nombre_obj1:'',nombre_obj2:'',dimension_mm:null,deduce:'',item:null};setTempLine(newLine);setInputPos(pos);setShowInput(true);setPoints([]);setMousePos(null);}}};const handleMouseMove=e=>{if(pencilMode&&points.length===1&&!eraserMode){const stage=e.target.getStage();const pos=stage.getPointerPosition();setMousePos(pos);}};const confirmDimension=()=>{if(tempLine){tempLine.dimension_mm=parseFloat(dimension);setLines([...lines,tempLine]);setTempLine(null);setDimension('');setShowInput(false);}};const updateNombre=()=>{if(selectedEnd){const updatedLines=[...lines];const targetLine=updatedLines[selectedEnd.lineIndex];const newName=nameInput;if(selectedEnd.end==='p1'){targetLine.nombre_obj1=newName;}else{targetLine.nombre_obj2=newName;}// Propagate name to matching endpoints in other lines\nupdatedLines.forEach((line,idx)=>{if(idx===selectedEnd.lineIndex)return;if(Math.abs(line.p1.x-targetLine[selectedEnd.end].x)<1&&Math.abs(line.p1.y-targetLine[selectedEnd.end].y)<1){line.nombre_obj1=newName;}if(Math.abs(line.p2.x-targetLine[selectedEnd.end].x)<1&&Math.abs(line.p2.y-targetLine[selectedEnd.end].y)<1){line.nombre_obj2=newName;}});const targetPos=targetLine[selectedEnd.end];updatedLines.forEach(line=>{if(Math.hypot(line.p1.x-targetPos.x,line.p1.y-targetPos.y)<proximityThreshold){line.nombre_obj1=newName;}if(Math.hypot(line.p2.x-targetPos.x,line.p2.y-targetPos.y)<proximityThreshold){line.nombre_obj2=newName;}});setLines(updatedLines);setSelectedEnd(null);setNameInput('');}};const handleLineClick=index=>{if(eraserMode){const updatedLines=[...lines];updatedLines.splice(index,1);setLines(updatedLines);}};const calcularRutaReal=()=>{const graph={};lines.forEach(line=>{const{nombre_obj1,nombre_obj2,dimension_mm}=line;if(!nombre_obj1||!nombre_obj2||!dimension_mm)return;if(!graph[nombre_obj1])graph[nombre_obj1]={};if(!graph[nombre_obj2])graph[nombre_obj2]={};graph[nombre_obj1][nombre_obj2]=dimension_mm;graph[nombre_obj2][nombre_obj1]=dimension_mm;});const dijkstra=(start,end)=>{const distances={};const prev={};const visited=new Set();const queue=[];for(const node in graph){distances[node]=Infinity;}distances[start]=0;queue.push({node:start,dist:0});while(queue.length>0){queue.sort((a,b)=>a.dist-b.dist);const{node}=queue.shift();if(visited.has(node))continue;visited.add(node);for(const neighbor in graph[node]){const newDist=distances[node]+graph[node][neighbor];if(newDist<distances[neighbor]){distances[neighbor]=newDist;prev[neighbor]=node;queue.push({node:neighbor,dist:newDist});}}}const path=[];let current=end;while(current){path.unshift(current);current=prev[current];}return distances[end]!==Infinity?{distance:distances[end],path}:null;};const result=dijkstra(nameInput1,nameInput2);if(result){setDistanciaRuta(result.distance);setRutaCalculada(result.path);}else{alert(\"No hay ruta entre los objetos ingresados.\");setDistanciaRuta(null);setRutaCalculada([]);}};const renderObjeto=(tipo,x,y,key,index,end)=>{const isHovered=hoveredObj===key;const commonProps={key,x,y,fill:isHovered?'yellow':tipo==='Conector'?'orange':tipo==='BRK'?'red':'green',onMouseEnter:()=>setHoveredObj(key),onMouseLeave:()=>setHoveredObj(null),onClick:()=>{if(!eraserMode){setSelectedEnd({lineIndex:index,end});setNameInput(end==='p1'?lines[index].nombre_obj1:lines[index].nombre_obj2);}}};switch(tipo){case'Conector':return/*#__PURE__*/_jsx(Rect,_objectSpread(_objectSpread({},commonProps),{},{x:x-5,y:y-5,width:10,height:10}));case'BRK':return/*#__PURE__*/_jsx(Circle,_objectSpread(_objectSpread({},commonProps),{},{radius:6}));case'SPL':return/*#__PURE__*/_jsx(RegularPolygon,_objectSpread(_objectSpread({},commonProps),{},{sides:3,radius:7}));default:return null;}};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'250px',padding:'10px',borderRight:'1px solid gray'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Modo de trabajo\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setMode('design'),style:{marginRight:'10px'},children:\"\\u270F\\uFE0F Dise\\xF1o\"}),true&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setPencilMode(!pencilMode),style:{backgroundColor:pencilMode?'lightgreen':'white'},children:[\"\\u270F\\uFE0F \",pencilMode?'Desactivar lápiz':'Activar lápiz']}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"Herramientas\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Objeto extremo 1:\"}),/*#__PURE__*/_jsxs(\"select\",{value:obj1,onChange:e=>setObj1(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Ninguno\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Conector\"}),/*#__PURE__*/_jsx(\"option\",{children:\"BRK\"}),/*#__PURE__*/_jsx(\"option\",{children:\"SPL\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Objeto extremo 2:\"}),/*#__PURE__*/_jsxs(\"select\",{value:obj2,onChange:e=>setObj2(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Ninguno\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Conector\"}),/*#__PURE__*/_jsx(\"option\",{children:\"BRK\"}),/*#__PURE__*/_jsx(\"option\",{children:\"SPL\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setEraserMode(!eraserMode),style:{backgroundColor:eraserMode?'lightcoral':'white'},children:[\"\\uD83E\\uDDFD \",eraserMode?'Cancelar borrador':'Activar borrador']}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"Calcular distancia real entre objetos\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Nombre objeto 1:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:nameInput1,onChange:e=>setNameInput1(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Nombre objeto 2:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:nameInput2,onChange:e=>setNameInput2(e.target.value)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:calcularRutaReal,children:\"Calcular ruta\"}),distanciaRuta!==null&&/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCCF Distancia total: \",distanciaRuta.toFixed(2),\" mm\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83E\\uDDED Ruta: \",rutaCalculada.join(' → ')]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Tabla de l\\xEDneas dibujadas\"}),/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',fontSize:'12px',borderCollapse:'collapse'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid black'},children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid black'},children:\"Extremo 1\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid black'},children:\"Extremo 2\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid black'},children:\"Dimensi\\xF3n (mm)\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid black'},children:\"Deduce\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:lines.map((line,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid gray'},children:index+1}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid gray'},children:line.nombre_obj1||'❌'}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid gray'},children:line.nombre_obj2||'❌'}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid gray'},children:line.dimension_mm||'❌'}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid gray'},children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:line.deduce,onChange:e=>{const updated=[...lines];updated[index].deduce=e.target.value;setLines(updated);},style:{width:'60px'}})})]},index))})]})]}),selectedEnd&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Editar nombre del objeto\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Nombre:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:nameInput,onChange:e=>setNameInput(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:updateNombre,children:\"Asignar\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsx(Stage,{width:800,height:600,onClick:handleStageClick,onMouseMove:handleMouseMove,style:{border:'1px solid black'},children:/*#__PURE__*/_jsxs(Layer,{children:[lines.map((line,i)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Line,{points:[line.p1.x,line.p1.y,line.p2.x,line.p2.y],stroke:\"black\",strokeWidth:2,onClick:()=>handleLineClick(i)}),/*#__PURE__*/_jsx(Text,{x:(line.p1.x+line.p2.x)/2,y:(line.p1.y+line.p2.y)/2-10,text:\"\".concat(line.dimension_mm||'',\" mm\"),fontSize:10,fill:\"blue\"}),line.nombre_obj1&&/*#__PURE__*/_jsx(Text,{x:line.p1.x+5,y:line.p1.y-15,text:line.nombre_obj1,fontSize:10,fill:\"black\"}),line.nombre_obj2&&/*#__PURE__*/_jsx(Text,{x:line.p2.x+5,y:line.p2.y-15,text:line.nombre_obj2,fontSize:10,fill:\"black\"}),renderObjeto(line.obj1,line.p1.x,line.p1.y,\"obj1-\".concat(i),i,'p1'),renderObjeto(line.obj2,line.p2.x,line.p2.y,\"obj2-\".concat(i),i,'p2')]},i)),points.length===1&&mousePos&&!eraserMode&&/*#__PURE__*/_jsx(Line,{points:[points[0].x,points[0].y,mousePos.x,mousePos.y],stroke:\"gray\",dash:[4,4],strokeWidth:1})]})}),showInput&&/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',left:inputPos.x,top:inputPos.y,background:'white',border:'1px solid gray',padding:'5px'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Dimensi\\xF3n (mm): \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:dimension,onChange:e=>setDimension(e.target.value),style:{width:'80px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:confirmDimension,children:\"OK\"})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","Stage","Layer","Line","Text","Rect","Circle","RegularPolygon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","lines","setLines","points","setPoints","obj1","setObj1","obj2","setObj2","dimension","setDimension","inputPos","setInputPos","x","y","showInput","setShowInput","tempLine","setTempLine","mousePos","setMousePos","hoveredObj","setHoveredObj","selectedEnd","setSelectedEnd","nameInput","setNameInput","eraserMode","setEraserMode","nameInput1","setNameInput1","nameInput2","setNameInput2","distanciaRuta","setDistanciaRuta","rutaCalculada","setRutaCalculada","pencilMode","setPencilMode","proximityThreshold","getClosestEndpoint","pos","closest","minDist","Infinity","forEach","line","end","point","dist","Math","hypot","obj","handleStageClick","e","stage","target","getStage","getPointerPosition","length","snap","newLine","p1","p2","nombre_obj1","nombre_obj2","dimension_mm","deduce","item","handleMouseMove","confirmDimension","parseFloat","updateNombre","updatedLines","targetLine","lineIndex","newName","idx","abs","targetPos","handleLineClick","index","splice","calcularRutaReal","graph","dijkstra","start","distances","prev","visited","Set","queue","node","push","sort","a","b","shift","has","add","neighbor","newDist","path","current","unshift","distance","result","alert","renderObjeto","tipo","key","isHovered","commonProps","fill","onMouseEnter","onMouseLeave","onClick","_objectSpread","width","height","radius","sides","style","display","children","padding","borderRight","marginRight","backgroundColor","value","onChange","type","toFixed","join","fontSize","borderCollapse","border","map","updated","position","onMouseMove","i","stroke","strokeWidth","text","concat","dash","left","top","background"],"sources":["/workspaces/Dim_checktofrom/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Stage, Layer, Line, Text, Rect, Circle, RegularPolygon } from 'react-konva';\n\nfunction App() {\n  const [mode, setMode] = useState('design');\n  const [lines, setLines] = useState([]);\n  const [points, setPoints] = useState([]);\n  const [obj1, setObj1] = useState('Ninguno');\n  const [obj2, setObj2] = useState('Ninguno');\n  const [dimension, setDimension] = useState('');\n  const [inputPos, setInputPos] = useState({ x: 0, y: 0 });\n  const [showInput, setShowInput] = useState(false);\n  const [tempLine, setTempLine] = useState(null);\n  const [mousePos, setMousePos] = useState(null);\n  const [hoveredObj, setHoveredObj] = useState(null);\n  const [selectedEnd, setSelectedEnd] = useState(null);\n  const [nameInput, setNameInput] = useState('');\n  const [eraserMode, setEraserMode] = useState(false);\n  const [nameInput1, setNameInput1] = useState('');\n  const [nameInput2, setNameInput2] = useState('');\n  const [distanciaRuta, setDistanciaRuta] = useState(null);\n  const [rutaCalculada, setRutaCalculada] = useState([]);\nconst [pencilMode, setPencilMode] = useState(true);\n\n  const proximityThreshold = 25;\n\n  const getClosestEndpoint = (pos) => {\n    let closest = null;\n    let minDist = Infinity;\n\n    lines.forEach((line) => {\n      ['p1', 'p2'].forEach((end) => {\n        const point = line[end];\n        const dist = Math.hypot(pos.x - point.x, pos.y - point.y);\n        if (dist < proximityThreshold && dist < minDist) {\n          closest = { point, obj: line[end === 'p1' ? 'obj1' : 'obj2'] };\n          minDist = dist;\n        }\n      });\n    });\n\n    return closest;\n  };\n\n  const handleStageClick = (e) => {\n    const stage = e.target.getStage();\n    const pos = stage.getPointerPosition();\n\n    if (pencilMode) {\n      if (eraserMode) return;\n\n      if (points.length === 0) {\n        const snap = getClosestEndpoint(pos);\n        if (snap) {\n          setPoints([snap.point]);\n          setObj1(snap.obj);\n        } else {\n          setPoints([pos]);\n        }\n      } else {\n        const newLine = {\n          p1: points[0],\n          p2: pos,\n          obj1,\n          obj2,\n          nombre_obj1: '',\n          nombre_obj2: '',\n          dimension_mm: null,\ndeduce: '',\n          item: null\n        };\n        setTempLine(newLine);\n        setInputPos(pos);\n        setShowInput(true);\n        setPoints([]);\n        setMousePos(null);\n      }\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (pencilMode && points.length === 1 && !eraserMode) {\n      const stage = e.target.getStage();\n      const pos = stage.getPointerPosition();\n      setMousePos(pos);\n    }\n  };\n\n  const confirmDimension = () => {\n    if (tempLine) {\n      tempLine.dimension_mm = parseFloat(dimension);\n      setLines([...lines, tempLine]);\n      setTempLine(null);\n      setDimension('');\n      setShowInput(false);\n    }\n  };\n\n\nconst updateNombre = () => {\n  if (selectedEnd) {\n    const updatedLines = [...lines];\n    const targetLine = updatedLines[selectedEnd.lineIndex];\n    const newName = nameInput;\n\n    if (selectedEnd.end === 'p1') {\n      targetLine.nombre_obj1 = newName;\n    } else {\n      targetLine.nombre_obj2 = newName;\n    }\n\n    // Propagate name to matching endpoints in other lines\n    updatedLines.forEach((line, idx) => {\n      if (idx === selectedEnd.lineIndex) return;\n      if (Math.abs(line.p1.x - targetLine[selectedEnd.end].x) < 1 && Math.abs(line.p1.y - targetLine[selectedEnd.end].y) < 1) {\n        line.nombre_obj1 = newName;\n      }\n      if (Math.abs(line.p2.x - targetLine[selectedEnd.end].x) < 1 && Math.abs(line.p2.y - targetLine[selectedEnd.end].y) < 1) {\n        line.nombre_obj2 = newName;\n      }\n    });\n   const targetPos = targetLine[selectedEnd.end];\n\nupdatedLines.forEach((line) => {\n  if (Math.hypot(line.p1.x - targetPos.x, line.p1.y - targetPos.y) < proximityThreshold) {\n    line.nombre_obj1 = newName;\n  }\n  if (Math.hypot(line.p2.x - targetPos.x, line.p2.y - targetPos.y) < proximityThreshold) {\n    line.nombre_obj2 = newName;\n  }\n});\n\n    setLines(updatedLines);\n    setSelectedEnd(null);\n    setNameInput('');\n  }\n};\n\n\n  const handleLineClick = (index) => {\n    if (eraserMode) {\n      const updatedLines = [...lines];\n      updatedLines.splice(index, 1);\n      setLines(updatedLines);\n    }\n  };\n\n  const calcularRutaReal = () => {\n    const graph = {};\n\n    lines.forEach((line) => {\n      const { nombre_obj1, nombre_obj2, dimension_mm } = line;\n      if (!nombre_obj1 || !nombre_obj2 || !dimension_mm) return;\n\n      if (!graph[nombre_obj1]) graph[nombre_obj1] = {};\n      if (!graph[nombre_obj2]) graph[nombre_obj2] = {};\n\n      graph[nombre_obj1][nombre_obj2] = dimension_mm;\n      graph[nombre_obj2][nombre_obj1] = dimension_mm;\n    });\n\n    const dijkstra = (start, end) => {\n      const distances = {};\n      const prev = {};\n      const visited = new Set();\n      const queue = [];\n\n      for (const node in graph) {\n        distances[node] = Infinity;\n      }\n      distances[start] = 0;\n      queue.push({ node: start, dist: 0 });\n\n      while (queue.length > 0) {\n        queue.sort((a, b) => a.dist - b.dist);\n        const { node } = queue.shift();\n        if (visited.has(node)) continue;\n        visited.add(node);\n\n        for (const neighbor in graph[node]) {\n          const newDist = distances[node] + graph[node][neighbor];\n          if (newDist < distances[neighbor]) {\n            distances[neighbor] = newDist;\n            prev[neighbor] = node;\n            queue.push({ node: neighbor, dist: newDist });\n          }\n        }\n      }\n\n      const path = [];\n      let current = end;\n      while (current) {\n        path.unshift(current);\n        current = prev[current];\n      }\n\n      return distances[end] !== Infinity ? { distance: distances[end], path } : null;\n    };\n\n    const result = dijkstra(nameInput1, nameInput2);\n    if (result) {\n      setDistanciaRuta(result.distance);\n      setRutaCalculada(result.path);\n    } else {\n      alert(\"No hay ruta entre los objetos ingresados.\");\n      setDistanciaRuta(null);\n      setRutaCalculada([]);\n    }\n  };\n\n  const renderObjeto = (tipo, x, y, key, index, end) => {\n    const isHovered = hoveredObj === key;\n    const commonProps = {\n      key,\n      x,\n      y,\n      fill: isHovered ? 'yellow' : tipo === 'Conector' ? 'orange' : tipo === 'BRK' ? 'red' : 'green',\n      onMouseEnter: () => setHoveredObj(key),\n      onMouseLeave: () => setHoveredObj(null),\n      onClick: () => {\n        if (!eraserMode) {\n          setSelectedEnd({ lineIndex: index, end });\n          setNameInput(end === 'p1' ? lines[index].nombre_obj1 : lines[index].nombre_obj2);\n        }\n      },\n    };\n\n    switch (tipo) {\n      case 'Conector':\n        return <Rect {...commonProps} x={x - 5} y={y - 5} width={10} height={10} />;\n      case 'BRK':\n        return <Circle {...commonProps} radius={6} />;\n      case 'SPL':\n        return <RegularPolygon {...commonProps} sides={3} radius={7} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: '250px', padding: '10px', borderRight: '1px solid gray' }}>\n        <h3>Modo de trabajo</h3>\n        <button onClick={() => setMode('design')} style={{ marginRight: '10px' }}>✏️ Diseño</button>\n        \n\n        {true && (\n          <>\n            <button onClick={() => setPencilMode(!pencilMode)} style={{ backgroundColor: pencilMode ? 'lightgreen' : 'white' }}>✏️ {pencilMode ? 'Desactivar lápiz' : 'Activar lápiz'}</button><br /><br /><h4>Herramientas</h4>\n            <label>Objeto extremo 1:</label>\n            <select value={obj1} onChange={(e) => setObj1(e.target.value)}>\n              <option>Ninguno</option>\n              <option>Conector</option>\n              <option>BRK</option>\n              <option>SPL</option>\n            </select>\n            <br /><br />\n            <label>Objeto extremo 2:</label>\n            <select value={obj2} onChange={(e) => setObj2(e.target.value)}>\n              <option>Ninguno</option>\n              <option>Conector</option>\n              <option>BRK</option>\n              <option>SPL</option>\n            </select>\n            <br /><br />\n            <button\n              onClick={() => setEraserMode(!eraserMode)}\n              style={{ backgroundColor: eraserMode ? 'lightcoral' : 'white' }}\n            >\n              🧽 {eraserMode ? 'Cancelar borrador' : 'Activar borrador'}\n            </button>\n            <br /><br />\n            <h4>Calcular distancia real entre objetos</h4>\n            <label>Nombre objeto 1:</label>\n            <input type=\"text\" value={nameInput1} onChange={(e) => setNameInput1(e.target.value)} />\n            <br />\n            <label>Nombre objeto 2:</label>\n            <input type=\"text\" value={nameInput2} onChange={(e) => setNameInput2(e.target.value)} />\n            <br />\n            <button onClick={calcularRutaReal}>Calcular ruta</button>\n            {distanciaRuta !== null && (\n              <p>📏 Distancia total: {distanciaRuta.toFixed(2)} mm<br />🧭 Ruta: {rutaCalculada.join(' → ')}</p>\n            )}\n<h4>Tabla de líneas dibujadas</h4>\n<table style={{ width: '100%', fontSize: '12px', borderCollapse: 'collapse' }}>\n  <thead>\n    <tr>\n      <th style={{ border: '1px solid black' }}>#</th>\n      <th style={{ border: '1px solid black' }}>Extremo 1</th>\n      <th style={{ border: '1px solid black' }}>Extremo 2</th>\n      <th style={{ border: '1px solid black' }}>Dimensión (mm)</th><th style={{ border: '1px solid black' }}>Deduce</th>\n    </tr>\n  </thead>\n  <tbody>\n    {lines.map((line, index) => (\n      <tr key={index}>\n        <td style={{ border: '1px solid gray' }}>{index + 1}</td>\n        <td style={{ border: '1px solid gray' }}>{line.nombre_obj1 || '❌'}</td>\n        <td style={{ border: '1px solid gray' }}>{line.nombre_obj2 || '❌'}</td>\n        <td style={{ border: '1px solid gray' }}>{line.dimension_mm || '❌'}</td><td style={{ border: '1px solid gray' }}><input type=\"number\" value={line.deduce} onChange={(e) => { const updated = [...lines]; updated[index].deduce = e.target.value; setLines(updated); }} style={{ width: '60px' }} /></td>\n      </tr>\n    ))}\n  </tbody>\n</table>\n          </>\n        )}\n\n        {selectedEnd && (\n          <>\n            <h4>Editar nombre del objeto</h4>\n            <label>Nombre:</label>\n            <input type=\"text\" value={nameInput} onChange={(e) => setNameInput(e.target.value)} />\n            <button onClick={updateNombre}>Asignar</button>\n          </>\n        )}\n      </div>\n\n      <div style={{ position: 'relative' }}>\n        <Stage\n          width={800}\n          height={600}\n          onClick={handleStageClick}\n          onMouseMove={handleMouseMove}\n          style={{ border: '1px solid black' }}\n        >\n          <Layer>\n            {lines.map((line, i) => (\n              <React.Fragment key={i}>\n                <Line\n                  points={[line.p1.x, line.p1.y, line.p2.x, line.p2.y]}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  onClick={() => handleLineClick(i)}\n                />\n                <Text\n                  x={(line.p1.x + line.p2.x) / 2}\n                  y={(line.p1.y + line.p2.y) / 2 - 10}\n                  text={`${line.dimension_mm || ''} mm`}\n                  fontSize={10}\n                  fill=\"blue\"\n                />\n                {line.nombre_obj1 && (\n                  <Text x={line.p1.x + 5} y={line.p1.y - 15} text={line.nombre_obj1} fontSize={10} fill=\"black\" />\n                )}\n                {line.nombre_obj2 && (\n                  <Text x={line.p2.x + 5} y={line.p2.y - 15} text={line.nombre_obj2} fontSize={10} fill=\"black\" />\n                )}\n                {renderObjeto(line.obj1, line.p1.x, line.p1.y, `obj1-${i}`, i, 'p1')}\n                {renderObjeto(line.obj2, line.p2.x, line.p2.y, `obj2-${i}`, i, 'p2')}\n              </React.Fragment>\n            ))}\n\n            {points.length === 1 && mousePos && !eraserMode && (\n              <Line\n                points={[points[0].x, points[0].y, mousePos.x, mousePos.y]}\n                stroke=\"gray\"\n                dash={[4, 4]}\n                strokeWidth={1}\n              />\n            )}\n          </Layer>\n        </Stage>\n\n        {showInput && (\n          <div style={{\n            position: 'absolute',\n            left: inputPos.x,\n            top: inputPos.y,\n            background: 'white',\n            border: '1px solid gray',\n            padding: '5px'\n          }}>\n            <label>Dimensión (mm): </label>\n            <input\n              type=\"number\"\n              value={dimension}\n              onChange={(e) => setDimension(e.target.value)}\n              style={{ width: '80px' }}\n            />\n            <button onClick={confirmDimension}>OK</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}